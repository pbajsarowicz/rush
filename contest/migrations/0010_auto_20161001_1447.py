# -*- coding: utf-8 -*-
# Generated by Django 1.9.2 on 2016-10-01 12:47
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


def add_styles_distances(apps, schema_editor):
    """
    Populating Style, Distance and ContestStylesDistances models with data.
    """
    Style = apps.get_model('contest', 'Style')
    Distance = apps.get_model('contest', 'Distance')

    Style.objects.bulk_create([
        Style(name='Dowolny'),
        Style(name='Grzbietowy'),
        Style(name='Klasyczny'),
        Style(name='Motylkowy'),
        Style(name='Zmienny')
    ])
    Distance.objects.bulk_create([
        Distance(value='25m'),
        Distance(value='50m'),
        Distance(value='100m'),
        Distance(value='200m'),
        Distance(value='400m'),
        Distance(value='800m'),
        Distance(value='1500m')
    ])


def remove_styles_distances(apps, schema_editor):
    """
    Removing data from Style, Distance and ContestStylesDistances models.
    """
    Style = apps.get_model('contest', 'Style')
    Distance = apps.get_model('contest', 'Distance')
    ContestStylesDistances = apps.get_model(
        'contest', 'ContestStylesDistances'
    )
    Style.objects.all().delete()
    Distance.objects.all().delete()
    ContestStylesDistances.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ('contest', '0009_contest_created_by'),
    ]

    operations = [
        migrations.CreateModel(
            name='ContestantScore',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_result', models.IntegerField(blank=True, null=True, verbose_name='Najlepszy czas')),
            ],
        ),
        migrations.CreateModel(
            name='ContestStyleDistances',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Distance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=16, verbose_name='Dystans')),
            ],
        ),
        migrations.CreateModel(
            name='Style',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='Styl')),
            ],
        ),
        migrations.RemoveField(
            model_name='contestant',
            name='styles',
        ),
        migrations.RemoveField(
            model_name='contest',
            name='styles',
        ),
        migrations.AddField(
            model_name='conteststyledistances',
            name='distances',
            field=models.ManyToManyField(to='contest.Distance'),
        ),
        migrations.AddField(
            model_name='conteststyledistances',
            name='style',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contest.Style'),
        ),
        migrations.AddField(
            model_name='contestantscore',
            name='contestant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contest.Contestant'),
        ),
        migrations.AddField(
            model_name='contestantscore',
            name='distance',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contest.Distance'),
        ),
        migrations.AddField(
            model_name='contestantscore',
            name='style',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contest.Style'),
        ),
        migrations.AddField(
            model_name='contest',
            name='styles',
            field=models.ManyToManyField(to='contest.ContestStyleDistances'),
        ),
        migrations.AlterUniqueTogether(
            name='contestantscore',
            unique_together=set([('contestant', 'style', 'distance')]),
        ),
        migrations.RunPython(
            code=add_styles_distances,
            reverse_code=remove_styles_distances,
        ),
    ]
